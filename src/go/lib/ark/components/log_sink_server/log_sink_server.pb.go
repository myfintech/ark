// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: log_sink_server.proto

package log_sink_server

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LogLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetAddress string `protobuf:"bytes,2,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	TargetHash    string `protobuf:"bytes,3,opt,name=target_hash,json=targetHash,proto3" json:"target_hash,omitempty"`
	Data          []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	CreatedAt     string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ReceivedAt    string `protobuf:"bytes,6,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	OrgId         string `protobuf:"bytes,7,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	ProjectId     string `protobuf:"bytes,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *LogLine) Reset() {
	*x = LogLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_sink_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLine) ProtoMessage() {}

func (x *LogLine) ProtoReflect() protoreflect.Message {
	mi := &file_log_sink_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLine.ProtoReflect.Descriptor instead.
func (*LogLine) Descriptor() ([]byte, []int) {
	return file_log_sink_server_proto_rawDescGZIP(), []int{0}
}

func (x *LogLine) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LogLine) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *LogLine) GetTargetHash() string {
	if x != nil {
		return x.TargetHash
	}
	return ""
}

func (x *LogLine) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LogLine) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *LogLine) GetReceivedAt() string {
	if x != nil {
		return x.ReceivedAt
	}
	return ""
}

func (x *LogLine) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *LogLine) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type RecordLogLineAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecordLogLineAck) Reset() {
	*x = RecordLogLineAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_sink_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordLogLineAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordLogLineAck) ProtoMessage() {}

func (x *RecordLogLineAck) ProtoReflect() protoreflect.Message {
	mi := &file_log_sink_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordLogLineAck.ProtoReflect.Descriptor instead.
func (*RecordLogLineAck) Descriptor() ([]byte, []int) {
	return file_log_sink_server_proto_rawDescGZIP(), []int{1}
}

var File_log_sink_server_proto protoreflect.FileDescriptor

var file_log_sink_server_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x69, 0x6e,
	0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0xf4, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x12, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65,
	0x41, 0x63, 0x6b, 0x32, 0x56, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x4b,
	0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73,
	0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x6e, 0x65, 0x1a, 0x21, 0x2e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x6e, 0x65, 0x41, 0x63, 0x6b, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x13, 0x5a, 0x11, 0x2e,
	0x3b, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_log_sink_server_proto_rawDescOnce sync.Once
	file_log_sink_server_proto_rawDescData = file_log_sink_server_proto_rawDesc
)

func file_log_sink_server_proto_rawDescGZIP() []byte {
	file_log_sink_server_proto_rawDescOnce.Do(func() {
		file_log_sink_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_log_sink_server_proto_rawDescData)
	})
	return file_log_sink_server_proto_rawDescData
}

var file_log_sink_server_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_log_sink_server_proto_goTypes = []interface{}{
	(*LogLine)(nil),          // 0: log_sink_server.LogLine
	(*RecordLogLineAck)(nil), // 1: log_sink_server.RecordLogLineAck
}
var file_log_sink_server_proto_depIdxs = []int32{
	0, // 0: log_sink_server.LogSink.Record:input_type -> log_sink_server.LogLine
	1, // 1: log_sink_server.LogSink.Record:output_type -> log_sink_server.RecordLogLineAck
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_log_sink_server_proto_init() }
func file_log_sink_server_proto_init() {
	if File_log_sink_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_log_sink_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_log_sink_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordLogLineAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_log_sink_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_log_sink_server_proto_goTypes,
		DependencyIndexes: file_log_sink_server_proto_depIdxs,
		MessageInfos:      file_log_sink_server_proto_msgTypes,
	}.Build()
	File_log_sink_server_proto = out.File
	file_log_sink_server_proto_rawDesc = nil
	file_log_sink_server_proto_goTypes = nil
	file_log_sink_server_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogSinkClient is the client API for LogSink service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogSinkClient interface {
	Record(ctx context.Context, opts ...grpc.CallOption) (LogSink_RecordClient, error)
}

type logSinkClient struct {
	cc grpc.ClientConnInterface
}

func NewLogSinkClient(cc grpc.ClientConnInterface) LogSinkClient {
	return &logSinkClient{cc}
}

func (c *logSinkClient) Record(ctx context.Context, opts ...grpc.CallOption) (LogSink_RecordClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LogSink_serviceDesc.Streams[0], "/log_sink_server.LogSink/Record", opts...)
	if err != nil {
		return nil, err
	}
	x := &logSinkRecordClient{stream}
	return x, nil
}

type LogSink_RecordClient interface {
	Send(*LogLine) error
	Recv() (*RecordLogLineAck, error)
	grpc.ClientStream
}

type logSinkRecordClient struct {
	grpc.ClientStream
}

func (x *logSinkRecordClient) Send(m *LogLine) error {
	return x.ClientStream.SendMsg(m)
}

func (x *logSinkRecordClient) Recv() (*RecordLogLineAck, error) {
	m := new(RecordLogLineAck)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LogSinkServer is the server API for LogSink service.
type LogSinkServer interface {
	Record(LogSink_RecordServer) error
}

// UnimplementedLogSinkServer can be embedded to have forward compatible implementations.
type UnimplementedLogSinkServer struct {
}

func (*UnimplementedLogSinkServer) Record(LogSink_RecordServer) error {
	return status.Errorf(codes.Unimplemented, "method Record not implemented")
}

func RegisterLogSinkServer(s *grpc.Server, srv LogSinkServer) {
	s.RegisterService(&_LogSink_serviceDesc, srv)
}

func _LogSink_Record_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LogSinkServer).Record(&logSinkRecordServer{stream})
}

type LogSink_RecordServer interface {
	Send(*RecordLogLineAck) error
	Recv() (*LogLine, error)
	grpc.ServerStream
}

type logSinkRecordServer struct {
	grpc.ServerStream
}

func (x *logSinkRecordServer) Send(m *RecordLogLineAck) error {
	return x.ServerStream.SendMsg(m)
}

func (x *logSinkRecordServer) Recv() (*LogLine, error) {
	m := new(LogLine)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _LogSink_serviceDesc = grpc.ServiceDesc{
	ServiceName: "log_sink_server.LogSink",
	HandlerType: (*LogSinkServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Record",
			Handler:       _LogSink_Record_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "log_sink_server.proto",
}
